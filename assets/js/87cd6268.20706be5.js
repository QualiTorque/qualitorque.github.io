"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[5378],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7859:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:36,title:"Self-Managed GitLab"},i=void 0,s={unversionedId:"admin-guide/source-control/source-managed-self-service",id:"admin-guide/source-control/source-managed-self-service",title:"Self-Managed GitLab",description:"Torque supports connecting asset/blueprint repositories residing in a self-managed GitLab repository.",source:"@site/docs/admin-guide/source-control/source-managed-self-service.md",sourceDirName:"admin-guide/source-control",slug:"/admin-guide/source-control/source-managed-self-service",permalink:"/admin-guide/source-control/source-managed-self-service",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/admin-guide/source-control/source-managed-self-service.md",tags:[],version:"current",sidebarPosition:36,frontMatter:{sidebar_position:36,title:"Self-Managed GitLab"},sidebar:"torqueSidebar",previous:{title:"Self-Managed Quali CloudShell",permalink:"/admin-guide/source-control/source-managed-cloudshell"},next:{title:"SSO Configuration",permalink:"/admin-guide/sso"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Torque supports connecting asset/blueprint repositories residing in a self-managed GitLab repository. "),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"GitLab access token with no expiration date and ",(0,a.kt)("strong",{parentName:"li"},"read.api")," and ",(0,a.kt)("strong",{parentName:"li"},"read.repository")," permission scopes.",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("img",{alt:"Locale Dropdown",src:r(3113).Z,width:"1235",height:"746"}))))),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create Provider via Torque REST API."),(0,a.kt)("p",{parentName:"li"}," Post: ",(0,a.kt)("a",{parentName:"p",href:"http://portal.qtorque.io/api/settings/repository_providers"},"http://portal.qtorque.io/api/settings/repository_providers")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "name":"gitlab-1",\n  "type":"gitLabEnterprise",\n  "details": {\n    "token":"NzcmESA2NjQ4MjUzOiCO87F2eTXL9TbHeWpeZO3p3GS9",\n    "base_url": "http://private.mygitlab.org/"\n  },\n  "repos": []\n}\n')),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name"),": Display name of repository"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type"),": Value representing the type of repository provider (",(0,a.kt)("strong",{parentName:"li"},"gitlabEnterprise")," in this case)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"token"),": Private access token (see ",(0,a.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"base_url"),": __Schema://Host:Port/ of the GitLab server (include port if required)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"username"),": Owner of the token username. (Not required for GitLab)"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Connect the repository as an asset repository to the space and discover the suitable assets. For details, see ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/Discover%20Your%20Assets"},"Discover Your Assets"),"."))))}d.isMDXComponent=!0},3113:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/gitlab-reqs-255706ef30d1f1857947e118b28f0c1f.png"}}]);