"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[8537],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),m=n,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return a?r.createElement(f,i(i({ref:t},p),{},{components:a})):r.createElement(f,i({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5301:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),i=["components"],l={sidebar_position:6,title:"Credentials"},s=void 0,c={unversionedId:"admin-guide/general/credentials",id:"admin-guide/general/credentials",title:"Credentials",description:"The Torque Credentials store is a built-in capability for Torque to securely store your Public Cloud authentication details in order for CloudFormation and Terraform type grains to securely access them.\xa0Credentials are similar in usage to Parameters, but unlike parameters which are single-value, credentials are specialized objects that contain multiple values with different structure depending on the credential type.\xa0Torque Credentials are supported for AWS (role based and access key based) and Azure (secret based) authentication.",source:"@site/docs/admin-guide/general/credentials.md",sourceDirName:"admin-guide/general",slug:"/admin-guide/general/credentials",permalink:"/admin-guide/general/credentials",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/admin-guide/general/credentials.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Credentials"},sidebar:"torqueSidebar",previous:{title:"REST API",permalink:"/rest-api/"},next:{title:"Parameters",permalink:"/admin-guide/general/params"}},p={},u=[{value:"<strong>Get Role ARN and external ID</strong>",id:"get-role-arn-and-external-id",level:3}],d={toc:u};function m(e){var t=e.components,l=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Torque ",(0,o.kt)("strong",{parentName:"p"},"Credentials")," store is a built-in capability for Torque to securely store your Public Cloud authentication details in order for CloudFormation and Terraform type grains to securely access them.\xa0Credentials are similar in usage to ",(0,o.kt)("a",{parentName:"p",href:"/admin-guide/general/params"},"Parameters"),", but unlike parameters which are single-value, credentials are specialized objects that contain multiple values with different structure depending on the credential type.\xa0Torque Credentials are supported for AWS (role based and access key based) and Azure (secret based) authentication."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"To add a credential:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("strong",{parentName:"li"},"Administration > Credentials"),"."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Add Credentials"),".",(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{alt:"Locale Dropdown",src:a(4632).Z,width:"1116",height:"488"})))),(0,o.kt)("li",{parentName:"ol"},"Give the credential a name and optionally a description."),(0,o.kt)("li",{parentName:"ol"},"Select the cloud provider (AWS / Azure)."),(0,o.kt)("li",{parentName:"ol"},"Select the credential type and enter the authentication details. ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"For AWS, role assumption and access key credentials are supported. Make sure you have a Role Arn that allows Torque access. For details, see the ",(0,o.kt)("a",{parentName:"li",href:"#get-role-arn-and-external-id"},"Get Role ARN and external ID")," section below. ",(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{alt:"Locale Dropdown",src:a(8971).Z,width:"1111",height:"376"})))),(0,o.kt)("li",{parentName:"ul"},"For Azure, only Service Principle Client ID and Secret are supported.",(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{alt:"Locale Dropdown",src:a(7118).Z,width:"559",height:"425"})))))),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Apply"),"."),(0,o.kt)("li",{parentName:"ol"},"Reference the credential in the grain's ",(0,o.kt)("inlineCode",{parentName:"li"},"authentication")," section.",(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{alt:"Locale Dropdown",src:a(9421).Z,width:"597",height:"248"}))))),(0,o.kt)("h3",{id:"get-role-arn-and-external-id"},(0,o.kt)("strong",{parentName:"h3"},"Get Role ARN and external ID")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In your AWS Management Console, open the IAM console at ",(0,o.kt)("a",{parentName:"p",href:"https://console.aws.amazon.com/iam/"},"https://console.aws.amazon.com/iam/"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the navigation pane of the IAM console, create a permissions policy to be associated with the role."),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Select ",(0,o.kt)("strong",{parentName:"li"},"Policies"),", and then click ",(0,o.kt)("strong",{parentName:"li"},"Create Policy"),". For information and assistance on generating an AWS IAM Policy, you can use the official ",(0,o.kt)("a",{parentName:"li",href:"https://awspolicygen.s3.amazonaws.com/policygen.html"},"AWS Policy Generator"),"."),(0,o.kt)("li",{parentName:"ol"},"Assign the permissions as appropriate."),(0,o.kt)("li",{parentName:"ol"},"Choose a name for your policy and save it."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the navigation pane of the IAM console, select ",(0,o.kt)("strong",{parentName:"p"},"Roles"),", and then click ",(0,o.kt)("strong",{parentName:"p"},"Create Role"),"."),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"From ",(0,o.kt)("strong",{parentName:"li"},"Select trusted entity"),", choose ",(0,o.kt)("strong",{parentName:"li"},"AWS Account"),"."),(0,o.kt)("li",{parentName:"ol"},"Under An AWS account ID, select ",(0,o.kt)("strong",{parentName:"li"},"An AWS account")," and enter 833621130516. (This is the Torque AWS account from which we will query the cost)."),(0,o.kt)("li",{parentName:"ol"},"Select ",(0,o.kt)("strong",{parentName:"li"},"Require external ID"),"."),(0,o.kt)("li",{parentName:"ol"},"Enter an ",(0,o.kt)("strong",{parentName:"li"},"External ID")," of your choosing. The External Id will be used to validate the Consumer of the ARN Role. ",(0,o.kt)("strong",{parentName:"li"},"Keep note of the external ID as you will need it later in the configuration step"),". "),(0,o.kt)("li",{parentName:"ol"},"In ",(0,o.kt)("strong",{parentName:"li"},"Next:Permissions"),", select the policy you have just created in step 1 for cost exploration permission."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Next"),"."),(0,o.kt)("li",{parentName:"ol"},"Enter a ",(0,o.kt)("strong",{parentName:"li"},"Role Rame")," or role name suffix to help you identify the purpose of this role or use AWS defined Name."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Create Role"),"."),(0,o.kt)("li",{parentName:"ol"},"(Optional) Enter a ",(0,o.kt)("strong",{parentName:"li"},"Description")," for the new role."),(0,o.kt)("li",{parentName:"ol"},"Review the role and then click ",(0,o.kt)("strong",{parentName:"li"},"Create role"),". Keep note of the role ARN as you will need it later in the configuration step.")))))}m.isMDXComponent=!0},8971:function(e,t,a){t.Z=a.p+"assets/images/aws-provider-details-c4020a7acca374e066c9b34d45c127a6.png"},7118:function(e,t,a){t.Z=a.p+"assets/images/azure-provider-details-36abf0054fbf7110b5ea20199b77d84a.png"},9421:function(e,t,a){t.Z=a.p+"assets/images/credential-reference-95d43da211f6e2a92db58c302aab57bf.png"},4632:function(e,t,a){t.Z=a.p+"assets/images/credentials-8caefe934e43ef2415a5a4fbdcbff585.png"}}]);