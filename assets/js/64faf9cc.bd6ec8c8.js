"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[791],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),m=p(t),c=l,h=m["".concat(s,".").concat(c)]||m[c]||d[c]||o;return t?a.createElement(h,i(i({ref:n},u),{},{components:t})):a.createElement(h,i({ref:n},u))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,i=new Array(o);i[0]=c;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[m]="string"==typeof e?e:l,i[1]=r;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},210:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var a=t(7462),l=(t(7294),t(3905));const o={sidebar_position:24,title:"The Ansible Grain"},i=void 0,r={unversionedId:"blueprint-designer-guide/blueprints/ansible-grain",id:"blueprint-designer-guide/blueprints/ansible-grain",title:"The Ansible Grain",description:"The Ansible grain is Torque\u2019s native support for orchestrating the execution of Ansible playbooks as part of a Torque blueprint. The referenced playbook can rely on vars or inventory-hosts that are dynamically provided by Torque, and then utilize them to perform configuration management, updates, a health check or any other flow that is executable from Ansible.",source:"@site/docs/blueprint-designer-guide/blueprints/ansible-grain.md",sourceDirName:"blueprint-designer-guide/blueprints",slug:"/blueprint-designer-guide/blueprints/ansible-grain",permalink:"/blueprint-designer-guide/blueprints/ansible-grain",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/blueprint-designer-guide/blueprints/ansible-grain.md",tags:[],version:"current",sidebarPosition:24,frontMatter:{sidebar_position:24,title:"The Ansible Grain"},sidebar:"torqueSidebar",previous:{title:"The Shell Grain",permalink:"/blueprint-designer-guide/blueprints/shell-grain"},next:{title:"The CloudShell Grain",permalink:"/blueprint-designer-guide/blueprints/cloudshell-grain"}},s={},p=[{value:"Tools and technologies",id:"tools-and-technologies",level:3},{value:"discovery",id:"discovery",level:3},{value:"source",id:"source",level:3},{value:"agent",id:"agent",level:3},{value:"inputs",id:"inputs",level:3},{value:"inventory-file",id:"inventory-file",level:3},{value:"outputs",id:"outputs",level:3},{value:"Installing Ansible Requirements",id:"installing-ansible-requirements",level:3},{value:"command-arguments",id:"command-arguments",level:3}],u={toc:p},m="wrapper";function d(e){let{components:n,...t}=e;return(0,l.kt)(m,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The Ansible grain is Torque\u2019s native support for orchestrating the execution of Ansible playbooks as part of a Torque blueprint. The referenced playbook can rely on vars or inventory-hosts that are dynamically provided by Torque, and then utilize them to perform configuration management, updates, a health check or any other flow that is executable from Ansible. "),(0,l.kt)("h3",{id:"tools-and-technologies"},"Tools and technologies"),(0,l.kt)("p",null,"The following tools and technologies are installed out of the box on our agents in the Kubernetes pods and can be used when designing ansible playbook execution:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"dotnet"),(0,l.kt)("li",{parentName:"ul"},"git"),(0,l.kt)("li",{parentName:"ul"},"python3"),(0,l.kt)("li",{parentName:"ul"},"pip3"),(0,l.kt)("li",{parentName:"ul"},"ansible"),(0,l.kt)("li",{parentName:"ul"},"openssh-client")),(0,l.kt)("h3",{id:"discovery"},"discovery"),(0,l.kt)("p",null,"Auto-discovery of Ansible playbooks requires parsing the file content to differentiate playbooks from other YAML files. The validation process checks if a ",(0,l.kt)("inlineCode",{parentName:"p"},"yaml")," file contains the ",(0,l.kt)("inlineCode",{parentName:"p"},"tasks")," property, which is a key indicator of an Ansible playbook."),(0,l.kt)("p",null,"The process is optimized to ensure efficient and targeted scanning."),(0,l.kt)("p",null,"The structure of a playbook directory should be as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"base_folder/\n  vars/ # any directory name\n    variables_file # any filename without extension\n  playbook.yaml\n")),(0,l.kt)("p",null,"A variables file might have the following structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'variable1: test\nvariable2:\n  - value1\n  - value2\n  - value3\nvariable3:\n  test: "value1"\n  test2: "value2"\n  test3: \'{{ name }}\'\n')),(0,l.kt)("p",null,"Here's an example of an auto-generated blueprint based on the discovered playbook and variables file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spec_version: 2\ndescription: Auto-generated Ansible Blueprint\ninputs:\n  agent:\n    type: agent\n  variable1:\n    type: string\n    default: test\n  variable2:\n    type: list\n    default: \n      - value1\n      - value2\n      - value3\n  variable3:\n    type: dict\n    default:\n      test: \"value1\"\n      test2: \"value2\"\n      test3: '{{ name }}'\n\ngrains:\n  ansible_playbook:\n    kind: ansible\n    spec:\n      source:\n        store: ansible-repo\n        path: ansible/playbook.yml\n      agent:\n        name: '{{ .inputs.agent }}'\n      inputs:\n        - variable1: '{{ .inputs.variable1 }}'\n        - variable2: '{{ .inputs.variable2 }}'\n        - variable3: '{{ .inputs.variable3 }}'\n      # The outputs section should be reviewed and corrected based on the playbook content\n      outputs:\n        - result\n")),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),(0,l.kt)("strong",{parentName:"h5"},"Note"))),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Please note that the ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," section in the auto-generated blueprint is a placeholder and should be reviewed and corrected by the user based on the actual outputs of the playbook. Since determining the outputs requires analyzing the playbook content, there is no automated way to set them during the auto-discovery process."))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),(0,l.kt)("strong",{parentName:"h5"},"Note"))),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The blueprint YAML should be validated and adjusted by the user before attempting to run it, particularly for the ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," section, to ensure accurate and expected behavior."))),(0,l.kt)("h3",{id:"source"},"source"),(0,l.kt)("p",null,"The source section of an Ansible grain provides Torque with the information on where the Ansible playbook is stored and should be retrieved from. This could be either a direct source URL to an Ansible playbook YAML file, or it can be a reference from a Torque-connected git repository. "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example - direct:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"My_Ansible_Grain:\n  kind: ansible\n  spec:\n    source:\n      path: https://github.com/quali/demo/blob/main/assets/ansible/install_apache2_ubuntu.yaml\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example - repository:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"My_Ansible_Grain:\n  kind: ansible\n  spec:\n    source:\n      store: assets\n      path: assets/ansible/install_apache2_webgame_ubuntu.yaml\n")),(0,l.kt)("h3",{id:"agent"},"agent"),(0,l.kt)("p",null,"Please see ",(0,l.kt)("a",{parentName:"p",href:"/blueprint-designer-guide/blueprints/blueprints-yaml-structure#host"},"the grain agent")," for more details."),(0,l.kt)("h3",{id:"inputs"},"inputs"),(0,l.kt)("p",null,'Inputs which are provided to the ansible grain will be used in the ansible command line as "extra-vars".\nThe syntax is similar to any grain inputs.'),(0,l.kt)("p",null,"Let's look at an example. In the example we have a blueprint with 2 grains: a VM and an ansible playbook to configure it."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Blueprint:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spec_version: 2\n   ...   \ngrains:\n  my_vm:\n    kind: terraform\n    spec:\n      source:\n        store: assets\n        path: terraform/vcenter/linux_vm\n      outputs:\n      - vm_ip\n      - vm_link\n      - vm_name\n\n  configure-vm:\n    depends-on: my_vm\n    kind: ansible\n    spec:\n      source:\n        store: assets\n        path: assets/ansible/configure.yaml\n      inputs:\n        - nodes: '{{ grains.my_vm.outputs.vm_ip }}'\n        - username: '{{ .params.vc_ubuntu_user }}'\n        - password: '{{ .params.vc_ubuntu_password }}'\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Torque supports playbooks which use ansible roles."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Playbook:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'- hosts: {{ nodes }}\n  tasks:\n  - name: configure virtual machine\n    azure_rm_virtualmachine:\n      username: "{{ username }}"\n      password: "{{ password }}"\n      \u2026          \n')),(0,l.kt)("p",null,"Torque will create a JSON file containing the grain inputs under the path: /var/run/ansible/inputs/inputs.json."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "nodes": [...],\n  "username": ...,\n  "password": ...\n}\n')),(0,l.kt)("p",null,"The playbook will be executed with the extra vars in the following way:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'ansible-playbook myplaybook.yaml --extra-vars "@/var/run/ansible/inputs/inputs.json"\n')),(0,l.kt)("h3",{id:"inventory-file"},"inventory-file"),(0,l.kt)("p",null,"Inventory file is a special grain section unique to the ansible grain, that allows you to provide in a YAML structured format, the content of the Ansible inventory file that will be generated for the Ansible playbook to use. For a deep understanding of the format of this file, please see the Ansible official documentation at ",(0,l.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html#inventory-basics-formats-hosts-and-groups"},"https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html#inventory-basics-formats-hosts-and-groups"),".\nThe general standard structure for such a file is as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"host_group:\n  hosts:\n    host1:\n      host1_var: host1_var_value\n    host2:\n      host2_var: host1_var_value\n  vars:\n    group_var: group_var_value\n")),(0,l.kt)("p",null,"Depending on the Ansible packages used in the playbook, these host and group variables may be used automatically by the package step (in which case, they must be provided in a specific name, for example an \u201cansible_become: yes/no\u201d group var will determine if the actions in the playbook need to be run as a different user from the host connection info.).\nVariables not defined on a host will automatically default to the values set in the vars section of the host_group. For example, the below playbook:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'---\n- gather_facts: no\n  hosts: all\n  tasks:\n  - name: Print Hello World\n    debug: \n      msg: "Hello World, my name is {{ person_name}}"\n')),(0,l.kt)("p",null,"with the below inventory file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"      inventory-file:\n        all:\n          hosts:\n            host1:\n              person_name: John\n            host2:          \n          vars:\n            person_name: Doe\n")),(0,l.kt)("p",null,"will result in this output"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'TASK [Print Hello World] *******************************************************\nok: [host1] => {\n    "msg": "Hello World, my name is John"\n}\nok: [host2] => {\n    "msg": "Hello World, my name is Doe"\n}\n')),(0,l.kt)("p",null,"Any section of the \u201cinventory-file:\u201d can contain dynamic values from dependent grains, from the blueprint\u2019s inputs or from Torque\u2019s parameter storage. For more information, see  ",(0,l.kt)("a",{parentName:"p",href:"/blueprint-designer-guide/blueprints/blueprints-yaml-structure#torque-templating-engine"},"Torque Templating engine"),".\n",(0,l.kt)("strong",{parentName:"p"},"Example:")," Below is an example of a grains section of a blueprint, containing an Ansible grain:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"}," grains:\n  hello_world_ansible:\n    kind: ansible\n    spec:\n      source:\n        store: assets\n        path: ansible/hello_world.yaml\n      agent:\n        name: my-torque-agent\n      inventory-file:\n        all:\n          hosts:\n            host1:\n              person_name: John\n            host2:          \n          vars:\n            person_name: Doe\n")),(0,l.kt)("h3",{id:"outputs"},"outputs"),(0,l.kt)("p",null,"Ansible does not support outputs from playbooks natively so Torque adds this support on top of the ansible capabilities.\nWhy would you need outputs from your ansible grain?\nOutput from the ansible grain can be passed to another grain (ansible or not) or to become one of the blueprint outputs so can be provided to the blueprint consumer (the end user)."),(0,l.kt)("p",null,'For this purpose, we have developed the Torque ansible module "export-torque-outputs".'),(0,l.kt)("p",null,"The module accepts a dictionary of output names and values. "),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Playbook:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"tasks:\n  - name: task1\n      configure_vm:\n      \u2026\n      register: result1\n    \u2026\n  - name: task2\n      do_something_else:\n      \u2026\n      register: result2\n    \n\n - name: Export outputs\n    torque.collections.export_torque_outputs:\n      outputs:\n        output1: \u201c{{ result1 }}\u201d\n        output2: \u201c{{ result2 }}\u201d\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},'The task which runs the "export_torque_outputs" module must be run on localhost. '))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Blueprint:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"grains:\n   configure-vm:\n      kind: ansible\n      spec:\n       ...\n       outputs:\n          - output1\n          - output2  \n")),(0,l.kt)("p",null,"If you wish to install the module locally to test it, please run ",(0,l.kt)("inlineCode",{parentName:"p"},"ansible-galaxy collection install torque.collections"),"\nThe module resides in the marketplace : ",(0,l.kt)("a",{parentName:"p",href:"https://galaxy.ansible.com/torque/collections"},"https://galaxy.ansible.com/torque/collections")),(0,l.kt)("h3",{id:"installing-ansible-requirements"},"Installing Ansible Requirements"),(0,l.kt)("p",null,"Torque is designed to streamline the installation of your module\u2019s dependencies. It accomplishes this by automatically detecting and installing the requirements specified in a ",(0,l.kt)("inlineCode",{parentName:"p"},"requirements.yaml")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"requirements.yml")," file. This file should be located in the root directory of your module."),(0,l.kt)("p",null,"For instance, if your module\u2019s main file is located at ",(0,l.kt)("inlineCode",{parentName:"p"},"ansible/my-module/main.yaml"),", the corresponding requirements file should be placed in the same directory, i.e., ",(0,l.kt)("inlineCode",{parentName:"p"},"ansible/my-module/"),"."),(0,l.kt)("p",null,"By adhering to this structure, you can ensure that Torque correctly identifies and installs all necessary requirements for your module."),(0,l.kt)("h3",{id:"command-arguments"},"command-arguments"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"command-arguments")," field allows you to pass additional arguments to the ",(0,l.kt)("inlineCode",{parentName:"p"},"ansible-playbook")," command when executing the Ansible playbook. This gives you flexibility to customize the Ansible run as needed."),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"grains:\n  print_hello:\n    kind: ansible\n    spec:\n      source:\n        store: ansible-repo\n        path: ansible/playbook.yaml\n      agent:\n        name: '{{ .inputs.agent }}'\n      command-arguments: \"--skip-tags deploy --force-handlers\"\n")),(0,l.kt)("p",null,"This will run ",(0,l.kt)("inlineCode",{parentName:"p"},"ansible-playbook")," with the ",(0,l.kt)("inlineCode",{parentName:"p"},"--skip-tags deploy --force-handlers")," flags appended to the command."),(0,l.kt)("p",null,"Here's a more complete example showing usage of ",(0,l.kt)("inlineCode",{parentName:"p"},"command-arguments")," along with other Ansible grain configurations:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spec_version: 2\ndescription: Run an Ansible playbook with a local connection\n\ninputs:\n  agent:\n    type: agent\n\ngrains:\n  print_hello:\n    kind: ansible\n    spec:\n      source:\n        store: ansible-repo\n        path: ansible/playbook.yaml\n      agent:\n        name: '{{ .inputs.agent }}'\n      command-arguments: \"--skip-tags deploy --version\" \n      env-vars: []\n      inventory-file:\n        localhost:\n          hosts:\n            127.0.0.1:\n              ansible_connection: local\n")),(0,l.kt)("p",null,"For the Blueprint example above, the directory structure is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"playbook.yaml\nroles/\n    hello/\n        tasks/\n            main.yaml\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"playbook.yaml"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"---\n- hosts: localhost\n  roles:\n    - hello\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"roles/hello/tasks/main.yaml"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'---\n- name: Print hello\n  debug:\n    msg: "hello"\n')),(0,l.kt)("p",null,"This will execute the ",(0,l.kt)("inlineCode",{parentName:"p"},"hello"),' role, which will print "hello" to the console.'),(0,l.kt)("p",null,"Note that this is a very simple example, and roles can be much more complex, containing multiple tasks, handlers, variables, and other components. Additionally, roles can be shared across multiple playbooks or even distributed as reusable Ansible roles."),(0,l.kt)("p",null,"In this blueprint, when executing the ",(0,l.kt)("inlineCode",{parentName:"p"},"print_hello")," Ansible grain, the ",(0,l.kt)("inlineCode",{parentName:"p"},"ansible-playbook")," command will include the ",(0,l.kt)("inlineCode",{parentName:"p"},"--skip-tags deploy --version")," flags specified in the ",(0,l.kt)("inlineCode",{parentName:"p"},"command-arguments")," field."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"command-arguments")," value can include any valid arguments that could be passed to ",(0,l.kt)("inlineCode",{parentName:"p"},"ansible-playbook"),". This allows customizing things like tags to run/skip, handling behavior, displaying version info, and more."))}d.isMDXComponent=!0}}]);