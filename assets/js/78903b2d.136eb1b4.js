"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([["7225"],{6283:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>s,toc:()=>a,default:()=>c,metadata:()=>l,assets:()=>d,contentTitle:()=>o});var l=JSON.parse('{"id":"blueprint-designer-guide/blueprints/cloudshell-grain","title":"The CloudShell Grain","description":"The CloudShell grain allows you to integrate Torque with Quali CloudShell. CloudShell blueprints are treated as assets in Torque, extending Torque\'s capabilities to manage physical resources alongside cloud and container environments.","source":"@site/docs/blueprint-designer-guide/blueprints/cloudshell-grain.md","sourceDirName":"blueprint-designer-guide/blueprints","slug":"/blueprint-designer-guide/blueprints/cloudshell-grain","permalink":"/blueprint-designer-guide/blueprints/cloudshell-grain","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiTorque/torque-docs/tree/master/docs/blueprint-designer-guide/blueprints/cloudshell-grain.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"title":"The CloudShell Grain"},"sidebar":"torqueSidebar","previous":{"title":"The CloudFormation Grain","permalink":"/blueprint-designer-guide/blueprints/cloudformation-grain"},"next":{"title":"The Helm Grain","permalink":"/blueprint-designer-guide/blueprints/helm-grain"}}'),t=i(4848),r=i(4429);let s={sidebar_position:9,title:"The CloudShell Grain"},o=void 0,d={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Environment lifecycle management",id:"environment-lifecycle-management",level:2},{value:"Usage example",id:"usage-example",level:2},{value:"Grain Spec Reference",id:"grain-spec-reference",level:2},{value:"<code>source</code>",id:"source",level:3},{value:"<code>agent</code>",id:"agent",level:3},{value:"<code>inputs</code>",id:"inputs",level:3},{value:"Limitations",id:"limitations",level:2}];function u(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The CloudShell grain allows you to integrate Torque with Quali CloudShell. CloudShell blueprints are treated as assets in Torque, extending Torque's capabilities to manage physical resources alongside cloud and container environments."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before using the CloudShell grain, ensure you have:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A healthy CloudShell instance with proper connectivity"}),"\n",(0,t.jsx)(n.li,{children:"Configured integration between Torque and CloudShell"}),"\n",(0,t.jsx)(n.li,{children:"An agent with direct connectivity to the self-hosted CloudShell instance"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For detailed setup instructions, see ",(0,t.jsx)(n.a,{href:"/admin-guide/source-control/source-managed-cloudshell",children:"Self-Managed Quali CloudShell"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"environment-lifecycle-management",children:"Environment lifecycle management"}),"\n",(0,t.jsx)(n.p,{children:"When launching an environment in Torque with the CloudShell grain, Torque will start a sandbox in CloudShell with the same duration. The lifecycle is fully synchronized:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Extension"}),": If the Torque environment is extended, the CloudShell sandbox will be extended accordingly"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Termination"}),": When the Torque environment ends, the CloudShell sandbox will be terminated as well"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"spec_version: 2\ndescription: CloudShell integration example with physical network devices\n\ninputs:\n  agent:\n    type: agent\n  device_model:\n    type: string\n    default: \"Cisco Catalyst 3850\"\n  network_segment:\n    type: string\n    default: \"10.0.1.0/24\"\n\ngrains:\n  network_lab:\n    kind: cloudshell\n    spec:\n      source:\n        store: cloudshell-assets\n        path: NetworkTestingLab\n      agent:\n        name: '{{ .inputs.agent }}'\n      inputs:\n        - device_model: '{{ .inputs.device_model }}'\n        - network_segment: '{{ .inputs.network_segment }}'\n        - lab_duration: \"4h\"\n"})}),"\n",(0,t.jsx)(n.h2,{id:"grain-spec-reference",children:"Grain Spec Reference"}),"\n",(0,t.jsx)(n.h3,{id:"source",children:(0,t.jsx)(n.code,{children:"source"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"source"})," section specifies where the CloudShell blueprint is located. The ",(0,t.jsx)(n.code,{children:"path"})," property should reference the exact CloudShell Blueprint name as it appears in your CloudShell portal."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example - repository:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"cloudshell_grain:\n  kind: cloudshell\n  spec:\n    source:\n      store: cloudshell-assets\n      path: NetworkTestingLab\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"path"})," must match the exact name of the CloudShell Blueprint in your CloudShell environment. Blueprint names are case-sensitive."]})}),"\n",(0,t.jsx)(n.h3,{id:"agent",children:(0,t.jsx)(n.code,{children:"agent"})}),"\n",(0,t.jsx)(n.p,{children:"The agent executing the CloudShell grain must have direct network connectivity to the self-hosted CloudShell instance. This includes access to CloudShell Portal API and the CloudShell orchestration services."}),"\n",(0,t.jsxs)(n.p,{children:["Please see ",(0,t.jsx)(n.a,{href:"/blueprint-designer-guide/blueprints/blueprints-yaml-structure#agent",children:"the grain agent"})," for more details."]}),"\n",(0,t.jsx)(n.h3,{id:"inputs",children:(0,t.jsx)(n.code,{children:"inputs"})}),"\n",(0,t.jsxs)(n.p,{children:["Similar to blueprint inputs, the CloudShell grain ",(0,t.jsx)(n.code,{children:"inputs"})," allow you to reuse the same CloudShell Blueprint in different configurations. Inputs provided to the CloudShell grain are used when launching the CloudShell Blueprint."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"We recommend using Torque's auto-discovery capability to quickly model your CloudShell Blueprint within Torque, including all defined inputs and their types."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"grains:\n  network_lab:\n    kind: cloudshell\n    spec:\n      source:\n        store: cloudshell-assets\n        path: NetworkTestingLab\n      agent:\n        name: '{{ .inputs.agent }}'\n      inputs:\n        - device_model: '{{ .inputs.device_model }}'\n        - network_segment: '{{ .inputs.network_segment }}'\n        - test_duration: '{{ .inputs.test_duration }}'\n        - lab_environment: 'staging'\n"})}),"\n",(0,t.jsx)(n.p,{children:"The inputs are passed to CloudShell when the sandbox is created, allowing you to customize the physical infrastructure deployment based on your specific requirements."}),"\n",(0,t.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,t.jsx)(n.p,{children:"The CloudShell grain has the following current limitations:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Drift detection"}),": Not supported for CloudShell resources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Update operations"}),": Environment updates are not supported"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Auto-tagging"}),": Automatic resource tagging is not available"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Outputs"}),": CloudShell grain outputs are not currently supported"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unlimited environments"}),": Not supported for CloudShell grains"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"These limitations are specific to the CloudShell grain integration. Other grain types in the same blueprint may support these features."})})]})}function c(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},4429:function(e,n,i){i.d(n,{R:()=>s,x:()=>o});var l=i(6540);let t={},r=l.createContext(t);function s(e){let n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);