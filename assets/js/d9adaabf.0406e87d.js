"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[1070],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(r),m=a,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3527:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:3,title:"Self-Managed GitLab"},o=void 0,s={unversionedId:"admin-guide/source-control/self-hosted-repositories/self-managed-gitlab",id:"admin-guide/source-control/self-hosted-repositories/self-managed-gitlab",title:"Self-Managed GitLab",description:"Torque supports connecting asset/blueprint repositories residing in a self-managed GitLab repository.",source:"@site/docs/admin-guide/source-control/self-hosted-repositories/self-managed-gitlab.md",sourceDirName:"admin-guide/source-control/self-hosted-repositories",slug:"/admin-guide/source-control/self-hosted-repositories/self-managed-gitlab",permalink:"/admin-guide/source-control/self-hosted-repositories/self-managed-gitlab",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/admin-guide/source-control/self-hosted-repositories/self-managed-gitlab.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Self-Managed GitLab"},sidebar:"torqueSidebar",previous:{title:"Self-Managed GitHub",permalink:"/admin-guide/source-control/self-hosted-repositories/self-managed-github"},next:{title:"SSO Configuration",permalink:"/admin-guide/sso"}},p={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2}],u={toc:l},c="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(c,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Torque supports connecting asset/blueprint repositories residing in a self-managed GitLab repository. "),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"GitLab access token with no expiration date and ",(0,a.kt)("strong",{parentName:"li"},"read.api")," and ",(0,a.kt)("strong",{parentName:"li"},"read.repository")," permission scopes.",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("img",{alt:"Locale Dropdown",src:r(3113).Z,width:"1235",height:"746"}))))),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create Provider via Torque REST API."),(0,a.kt)("p",{parentName:"li"}," POST ",(0,a.kt)("a",{parentName:"p",href:"http://portal.qtorque.io/api/settings/repository_providers"},"http://portal.qtorque.io/api/settings/repository_providers")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "name":"gitlab-1",\n  "type":"gitLabEnterprise",\n  "details": {\n    "token":"NzcmESA2NjQ4MjU*********XL9TbHeWpeZO3p3GS9",\n    "base_url": "http://private.mygitlab.org/"\n  },\n  "repos": []\n}\n')),(0,a.kt)("p",{parentName:"li"},"Or with a curl command:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl --request POST \\   --url https://portal.qtorque.io/api/settings/repository_providers \\  \n--header \'Authorization: Bearer <Torque API toke>\' \\  \n--header \'Content-Type: application/json\' \\  \n--data \'{  \n  "name":"gitlab-1",  \n  "type":"gitLabEnterprise",\n  "details": {    \n    "token":"NzcmESA2NjQ4MjU*********XL9TbHeWpeZO3p3GS9",    \n    "base_url": "http://private.mygitlab.org/" \n  }, \n  "repos": [] }\'\n\n')),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name"),": Display name of the provider"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type"),": Value representing the type of repository provider (",(0,a.kt)("strong",{parentName:"li"},"gitlabEnterprise")," in this case)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"token"),": Private access token (see ",(0,a.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"base_url"),": __Schema://Host:Port/ of the GitLab server (include port if required)"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},'Connect the repository as an asset repository to the space and discover the suitable assets. Make sure to check the "self-managed" checkbox.\nThe repository\'s URL must be in the base URL of the configured provider.',(0,a.kt)("br",{parentName:"p"}),"\n","For details regarding asset discovery, see ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/Discover%20Your%20Assets"},"Discover Your Assets"),"."))))}d.isMDXComponent=!0},3113:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/gitlab-reqs-255706ef30d1f1857947e118b28f0c1f.png"}}]);