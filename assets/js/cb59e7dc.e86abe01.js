"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([["5166"],{4107:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>o,toc:()=>l,default:()=>p,metadata:()=>r,assets:()=>c,contentTitle:()=>a});var r=JSON.parse('{"id":"blueprint-designer-guide/blueprints/cdk-grain","title":"The CDK Grain","description":"The AWS CDK grain enables you to orchestrate the deployment and management of AWS resources using the AWS Cloud Development Kit (CDK) as part of a Torque blueprint. This grain allows you to define, provision, and manage AWS infrastructure using familiar programming languages and the CDK toolchain.","source":"@site/docs/blueprint-designer-guide/blueprints/cdk-grain.md","sourceDirName":"blueprint-designer-guide/blueprints","slug":"/blueprint-designer-guide/blueprints/cdk-grain","permalink":"/blueprint-designer-guide/blueprints/cdk-grain","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiTorque/torque-docs/tree/master/docs/blueprint-designer-guide/blueprints/cdk-grain.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"The CDK Grain"},"sidebar":"torqueSidebar","previous":{"title":"The Blueprint Grain","permalink":"/blueprint-designer-guide/blueprints/blueprint-grain"},"next":{"title":"The CloudFormation Grain","permalink":"/blueprint-designer-guide/blueprints/cloudformation-grain"}}'),s=i(4848),t=i(4429);let o={sidebar_position:7,title:"The CDK Grain"},a=void 0,c={},l=[{value:"Overview",id:"overview",level:2},{value:"Example: Basic AWS CDK Grain",id:"example-basic-aws-cdk-grain",level:2},{value:"Example: Advanced AWS CDK Grain",id:"example-advanced-aws-cdk-grain",level:2},{value:"Grain Spec Reference",id:"grain-spec-reference",level:2},{value:"<code>source</code>",id:"source",level:3},{value:"<code>agent</code>",id:"agent",level:3},{value:"<code>env-vars</code>",id:"env-vars",level:3},{value:"<code>workspace-directories</code>",id:"workspace-directories",level:3},{value:"<code>inputs</code>",id:"inputs",level:3},{value:"<code>depends-on</code>",id:"depends-on",level:3},{value:"Notes",id:"notes",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The AWS CDK grain enables you to orchestrate the deployment and management of AWS resources using the ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/cdk/",children:"AWS Cloud Development Kit (CDK)"})," as part of a Torque blueprint. This grain allows you to define, provision, and manage AWS infrastructure using familiar programming languages and the CDK toolchain."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Currently, the CDK grain supports only the Python SDK."})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"With the AWS CDK grain, you can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deploy AWS infrastructure as code using CDK apps."}),"\n",(0,s.jsx)(n.li,{children:"Pass environment variables and inputs to parameterize your deployments."}),"\n",(0,s.jsx)(n.li,{children:"Use workspace directories to provide additional files or configuration to your CDK app."}),"\n",(0,s.jsx)(n.li,{children:"Control deployment agents and service accounts for secure execution."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-basic-aws-cdk-grain",children:"Example: Basic AWS CDK Grain"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"spec_version: 2\n\ninputs:\n  agent:\n    type: agent\n\ngrains:\n  common:\n    kind: aws-cdk\n    spec:\n      source:\n        store: 'cdk-repo'\n        path: 'cdk/python/dev/s3'\n      agent:\n        name: '{{ .inputs.agent }}'\n"})}),"\n",(0,s.jsx)(n.p,{children:"In this example:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The CDK app is sourced from the ",(0,s.jsx)(n.code,{children:"cdk-repo"})," store at ",(0,s.jsx)(n.code,{children:"cdk/python/dev/s3"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"The deployment runs on the agent specified by the blueprint input."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-advanced-aws-cdk-grain",children:"Example: Advanced AWS CDK Grain"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"spec_version: 2\n\ninputs:\n  app_name:\n    type: string\n  branch:\n    type: string\n  region:\n    type: string\n    default: eu-west-1\n    allowed-values:\n    - eu-west-1\n    - us-west-1\n  account:\n    type: string\n  agent:\n    type: agent\n\ngrains:\n  prod-deployment:\n    kind: 'aws-cdk'\n    spec:\n      source:\n        store: 'common-cdk'\n        path: 'cdk/python/aws/prod'\n        branch: '{{ .inputs.branch }}'\n      agent:\n          name: '{{ .inputs.agent }}'\n          service-account: 'prod-sa'\n      workspace-directories:\n        - source:\n            name: 'CONFIG_REPO_PATH'\n            store: 'config-repo'\n      env-vars:\n        - CDK_CONFIG_FILE: '$CONFIG_REPO_PATH/s3'\n        - APP: '{{ .inputs.app_name }}'\n        - AWS_DEFAULT_REGION: 'eu-west-1'\n        - REGION: '{{ .inputs.region }}'\n        - ACCOUNT_NAME: '{{ .inputs.account }}'\n"})}),"\n",(0,s.jsx)(n.p,{children:"This example demonstrates:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Using a specific branch of a CDK app from a connected store."}),"\n",(0,s.jsx)(n.li,{children:"Passing multiple environment variables, including dynamic values from blueprint inputs."}),"\n",(0,s.jsx)(n.li,{children:"Specifying both the agent and the service account for execution."}),"\n",(0,s.jsxs)(n.li,{children:["The environment variable ",(0,s.jsx)(n.code,{children:"CDK_CONFIG_FILE"})," is set, referencing a workspace directory."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"workspace-directories"})," section mounts additional files from another repository."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["For more details on how to use workspace directories effectively, refer to the ",(0,s.jsx)(n.a,{href:"/blueprint-designer-guide/blueprints/blueprints-yaml-structure#workspace-directories",children:"Workspace Directories Documentation"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"grain-spec-reference",children:"Grain Spec Reference"}),"\n",(0,s.jsx)(n.h3,{id:"source",children:(0,s.jsx)(n.code,{children:"source"})}),"\n",(0,s.jsx)(n.p,{children:"Defines where the CDK app is located. Supports:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"store"}),": The name of the connected repository or asset store."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"}),": Path to the CDK app within the store."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"branch"})," (optional): Git branch to use."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"commit"})," (optional): Git commit to use."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tag"})," (optional): Git tag to use."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"agent",children:(0,s.jsx)(n.code,{children:"agent"})}),"\n",(0,s.jsxs)(n.p,{children:["Specifies the agent on which to run the CDK deployment. You can also specify a ",(0,s.jsx)(n.code,{children:"service-account"})," for AWS credentials."]}),"\n",(0,s.jsx)(n.h3,{id:"env-vars",children:(0,s.jsx)(n.code,{children:"env-vars"})}),"\n",(0,s.jsx)(n.p,{children:"A list of environment variables to set for the CDK process. Supports static values and Torque templating."}),"\n",(0,s.jsx)(n.h3,{id:"workspace-directories",children:(0,s.jsx)(n.code,{children:"workspace-directories"})}),"\n",(0,s.jsx)(n.p,{children:"Mounts additional directories from other stores or repositories into the CDK app's workspace. Useful for providing configuration files or dependencies."}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"workspace-directories:\n  - source:\n      store: config-repo\n      name: CONFIG_REPO_PATH\n"})}),"\n",(0,s.jsx)(n.h3,{id:"inputs",children:(0,s.jsx)(n.code,{children:"inputs"})}),"\n",(0,s.jsx)(n.p,{children:"Inputs can be used to parameterize your CDK deployment, typically referenced in environment variables or within your CDK code."}),"\n",(0,s.jsx)(n.h3,{id:"depends-on",children:(0,s.jsx)(n.code,{children:"depends-on"})}),"\n",(0,s.jsx)(n.p,{children:"Defines dependencies on other grains, ensuring this grain runs after the specified ones."}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The AWS CDK grain expects a valid CDK app (e.g., Python, TypeScript, etc.) in the specified path."}),"\n",(0,s.jsx)(n.li,{children:"Ensure that your agent has the necessary AWS credentials and permissions to deploy the resources defined in your CDK app."}),"\n",(0,s.jsx)(n.li,{children:"Use environment variables to pass configuration and secrets securely."}),"\n",(0,s.jsx)(n.li,{children:"You can use Torque's templating engine to inject dynamic values from blueprint inputs or parameters."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/cdk/latest/guide/home.html",children:"AWS CDK Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/blueprint-designer-guide/blueprints/blueprints-yaml-structure#torque-templating-engine",children:"Torque Templating Engine"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/blueprint-designer-guide/blueprints/blueprints-yaml-structure",children:"Blueprint YAML Structure"})}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4429:function(e,n,i){i.d(n,{R:()=>o,x:()=>a});var r=i(6540);let s={},t=r.createContext(s);function o(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);