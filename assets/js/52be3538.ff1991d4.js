"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[7409],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7832:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:23,title:"Torque CLI"},s=void 0,u={unversionedId:"eco-system/dev-tools/torque-cli",id:"eco-system/dev-tools/torque-cli",title:"Torque CLI",description:"This tool streamlines the YAML development process by validating changes in real-time and allowing the execution of test environments directly from the development branch, without needing to first merge the changes to production.",source:"@site/docs/eco-system/dev-tools/torque-cli.md",sourceDirName:"eco-system/dev-tools",slug:"/eco-system/dev-tools/torque-cli",permalink:"/eco-system/dev-tools/torque-cli",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/eco-system/dev-tools/torque-cli.md",tags:[],version:"current",sidebarPosition:23,frontMatter:{sidebar_position:23,title:"Torque CLI"},sidebar:"torqueSidebar",previous:{title:"Integrations Overview",permalink:"/eco-system/integrations-overview"},next:{title:"Torque VSCode plugin",permalink:"/eco-system/dev-tools/vs-plugin"}},p={},c=[{value:"Installation",id:"installation",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Additional environment variables",id:"additional-environment-variables",level:3},{value:"Basic Usage",id:"basic-usage",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This tool streamlines the YAML development process by validating changes in real-time and allowing the execution of test environments directly from the development branch, without needing to first merge the changes to production. "),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"There are two ways to use torque-cli:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Install torque-cli as a .NET tool. In this case you need to have dotnet (version 7.0 or higher) installed. To install dotnet, follow the link: ",(0,a.kt)("a",{parentName:"p",href:"https://dotnet.microsoft.com/en-us/download"},"https://dotnet.microsoft.com/en-us/download")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"dotnet tool install -g torque-cli\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run torque-cli as a docker container:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"docker run -it qtorque/torque-cli:latest\n")))),(0,a.kt)("p",null,"To mount your local torque config file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"docker run -it qtorque/torque-cli:latest -v ~/.torque:/root/.torque/ # \n")),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"To allow the torque-cli to authenticate with Torque, you must provide several parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Space"),": The Torque space to use"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Repository"),": (Optional) Represents the name of the git repository containing the bleprints and IaC files that will be used when calling Torque"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Token"),": The easiest way to generate a token is via the Torque UI. ",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"In your space, go to ",(0,a.kt)("strong",{parentName:"li"},"Settings > Integrations"),"."),(0,a.kt)("li",{parentName:"ol"},"Click ",(0,a.kt)("strong",{parentName:"li"},"Connect")," under any of the CI tools."),(0,a.kt)("li",{parentName:"ol"},"Click ",(0,a.kt)("strong",{parentName:"li"},"New Token")," to get an API token.")))),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Token"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Space")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Repository")," parameters can be provided via a special command line flags (",(0,a.kt)("inlineCode",{parentName:"p"},"--token"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"--space"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"--repo"),", respectively). You can also conveniently place these parameters in a config file relative to your user folder, so they don't need to be provided each time."),(0,a.kt)("p",null,"The config file can be created and managed using the interactive ",(0,a.kt)("inlineCode",{parentName:"p"},"torque config")," command.\nThe CLI supports multiple profiles, and you can switch between them by setting the active profile for ease of use. To use a non-active profile, the ",(0,a.kt)("inlineCode",{parentName:"p"},"--profile_")," command-line flag needs to be used to specify the profile name."),(0,a.kt)("p",null,"To add a new profile or update an existing one, run ",(0,a.kt)("inlineCode",{parentName:"p"},"torque config set")," and follow the on-screen directions.\nTo see all profiles, run ",(0,a.kt)("inlineCode",{parentName:"p"},"torque config list")," and the command will output a table of all the profiles that are currently configured. "),(0,a.kt)("p",null,"Example output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ torque config list\n                     Torque user profiles\n\n  Active \u2502 Profile Name \u2502  Space   \u2502 Repository \u2502   Token\n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    +    \u2502     demo     \u2502  sample  \u2502            \u2502 ******r-aI\n         \u2502     test     \u2502   dev    \u2502   myrepo   \u2502 ******masd\n")),(0,a.kt)("p",null,"If a profile is no longer needed, you can remove it by running: ",(0,a.kt)("inlineCode",{parentName:"p"},"torque config remove <profile-name>")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"torque config")," command saves the config file relative to your home user directory ('~/.torque/config.yml' on Mac and Linux or in the '%UserProfile%","\\",".torque","\\","config.yaml' file on Windows).\nTo place the config file in a different location, specify that location via an environment variable:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"$ export TORQUE_CONFIG_PATH=/path/to/file")),(0,a.kt)("p",null,"You can also provide the different parameters as environment variables instead of using the config file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export TORQUE_TOKEN = xxxzzzyyy\nexport TORQUE_SPACE = demo_space\n# Optional\nexport TORQUE_ACCOUNT = MYACCOUNT\nexport TORQUE_REPO_NAME = my_repo\n")),(0,a.kt)("h3",{id:"additional-environment-variables"},"Additional environment variables"),(0,a.kt)("p",null,"It is possible to switch the client to a different Torque instance setting custom API endpoint:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export TORQUE_URL = "https://demo.qtorque.io"\n')),(0,a.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,a.kt)("p",null,"Torque CLI r"),(0,a.kt)("p",null,"There are some basic actions Torque CLI currently allows you to perform:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Validate a blueprint (using the ",(0,a.kt)("inlineCode",{parentName:"li"},"torque bp validate")," command)"),(0,a.kt)("li",{parentName:"ul"},"Get a list of blueprints (via ",(0,a.kt)("inlineCode",{parentName:"li"},"torque bp list"),")"),(0,a.kt)("li",{parentName:"ul"},"Start an environment (via ",(0,a.kt)("inlineCode",{parentName:"li"},"torque env start"),")")),(0,a.kt)("p",null,"To see the help files, run:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"$ torque --help")),(0,a.kt)("p",null,"It will give you detailed output with usage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ torque -h\nUSAGE:\ntorque [OPTIONS] <COMMAND>\n\nEXAMPLES:\ntorque bp get MyBp\ntorque bp list\ntorque env start demo --duration=100 --name=MyDemoEnv\ntorque env get\ntorque env end qwdj4jr9smf\n\nOPTIONS:\n-h, --help       Prints help information\n-v, --version    Prints version information\n\nCOMMANDS:\nblueprint      Get, List, Validate blueprints\nenvironment    Start, End, View Torque environments\nconfig         List, Add and Modify user profiles\nagent          List, associate agents\nspace          Create, delete spaces, connect repo to space\n")),(0,a.kt)("p",null,"You can get additional help information for a particular command by including  the ",(0,a.kt)("inlineCode",{parentName:"p"},"--help")," flag after the command name, like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ torque env -h\nDESCRIPTION:\nStart, End, View Torque environments.\n\nUSAGE:\n    torque environment [OPTIONS] <COMMAND>\n\nEXAMPLES:\n    torque env start demo --duration=100 --name=MyDemoEnv\n    torque env get\n    torque env end qwdj4jr9smf\n    torque env list --show-ended\n    torque env extend qwdj4jr9smf --duration 120\n\nOPTIONS:\n    -h, --help    Prints help information\n\nCOMMANDS:\n    start <BLUEPRINT-NAME>     Start Environment\n    get <ENVIRONMENT-ID>       Get Environment Details\n    end <ENVIRONMENT-ID>       End Torque Environment\n    list                       List Torque Environment\n    extend <ENVIRONMENT-ID>    Extend Torque Environment\n")))}d.isMDXComponent=!0}}]);