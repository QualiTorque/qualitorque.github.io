"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[1528],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),g=r,d=p["".concat(u,".").concat(g)]||p[g]||m[g]||i;return n?a.createElement(d,o(o({ref:t},c),{},{components:n})):a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3812:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4,title:"Cross Account Provisioning (AWS)"},o="Cross Account Provisioning in AWS",s={unversionedId:"example-blueprints/Cross Account Provisioning",id:"example-blueprints/Cross Account Provisioning",title:"Cross Account Provisioning (AWS)",description:"Torque supports multiple options for provisioning resources across multiple AWS accounts.",source:"@site/docs/example-blueprints/Cross Account Provisioning.md",sourceDirName:"example-blueprints",slug:"/example-blueprints/Cross Account Provisioning",permalink:"/example-blueprints/Cross Account Provisioning",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/example-blueprints/Cross Account Provisioning.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Cross Account Provisioning (AWS)"},sidebar:"torqueSidebar",previous:{title:"Kubernetes Compliance",permalink:"/example-blueprints/Kubernetes Compliance"},next:{title:"Blueprint Design",permalink:"/blueprint-designer-guide/blueprint-quickstart-guide"}},u={},l=[{value:"Option A: Torque Agent in each account",id:"option-a-torque-agent-in-each-account",level:2},{value:"Requirements and Setup",id:"requirements-and-setup",level:3},{value:"Benefits and Usage",id:"benefits-and-usage",level:3},{value:"Architectural Diagram",id:"architectural-diagram",level:3},{value:"Option B: Single Torque Agent in the Master Account",id:"option-b-single-torque-agent-in-the-master-account",level:2},{value:"Requirements and Setup",id:"requirements-and-setup-1",level:3},{value:"Benefits and Usage",id:"benefits-and-usage-1",level:3},{value:"Architectural Diagram",id:"architectural-diagram-1",level:3},{value:"Summary",id:"summary",level:2}],c={toc:l},p="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cross-account-provisioning-in-aws"},"Cross Account Provisioning in AWS"),(0,r.kt)("p",null,"Torque supports multiple options for provisioning resources across multiple AWS accounts. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Here are two common approaches")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#option-a-torque-agent-in-each-account"},"Option A: Torque Agent in each account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#option-b-single-torque-agent-in-the-master-account"},"Option B: Single Torque Agent in the Master Account"))),(0,r.kt)("h2",{id:"option-a-torque-agent-in-each-account"},"Option A: Torque Agent in each account"),(0,r.kt)("h3",{id:"requirements-and-setup"},"Requirements and Setup"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each Torque Agent is sitting in a different AWS account."),(0,r.kt)("li",{parentName:"ul"},"Each Agent is deployed in a different EKS cluster."),(0,r.kt)("li",{parentName:"ul"},"OIDC is enabled on the clusters, and they each have a valid default service account with an IAM role annotation.")),(0,r.kt)("h3",{id:"benefits-and-usage"},"Benefits and Usage"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Changing the agent on a grain (via an agent type Blueprint input with/without allowed values restriction) will change the AWS account that the grain contents will be deployed on."),(0,r.kt)("li",{parentName:"ul"},"Agent name can also be an Account/Space parameter, which will allow switching target accounts on all blueprints/grains that reference it at once.")),(0,r.kt)("h3",{id:"architectural-diagram"},"Architectural Diagram"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Option A Diagram: Cross Accounts provisioning with Torque Agent in each account"),"\n",(0,r.kt)("img",{alt:"Option A Architectural Diagram",src:n(7465).Z,width:"1344",height:"956"}))),(0,r.kt)("h2",{id:"option-b-single-torque-agent-in-the-master-account"},"Option B: Single Torque Agent in the Master Account"),(0,r.kt)("h3",{id:"requirements-and-setup-1"},"Requirements and Setup"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Torque agent is configured with a valid default service account that authenticates into an IAM role via OIDC (known as Master account role)."),(0,r.kt)("li",{parentName:"ul"},"Each target AWS account has an IAM role with an identical name, with a trust policy set up to allow the Master account role to assume it (known as Target account role)."),(0,r.kt)("li",{parentName:"ul"},"These Target Account roles have the permissions necessary to perform the actions Terraform will describe on the respective account."),(0,r.kt)("li",{parentName:"ul"},"By utilizing identical names, the only difference in the IAM role ARNs is the account number.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Role Trust Policy Example")),(0,r.kt)("p",null,"This trust policy is set on the Target account role and references the ARN of the Master account role."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{  \n  "Version": "2012-10-17",  \n  "Statement": [ {\n      "Effect": "Allow",\n      "Principal": {\n        "AWS": "arn:aws:iam::111111111111:role/My_AWS_ROLE"\n      },\n      "Action": "sts:AssumeRole"\n  } ]\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Terraform HCL Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl"},'variable "aws_account_id" {}\n\nprovider "aws" {  \n  assume_role {\n    role_arn     = "arn:aws:iam::${var.aws_account_id}:role/ROLE_NAME"\n    session_name = "SESSION_NAME"\n    external_id  = "EXTERNAL_ID"  \n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Torque Blueprint Example")),(0,r.kt)("p",null,"The Blueprint provides the user with a list of accounts to choose from, with a friendly text name for each account which is split out before passing the account number to Terraform."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'inputs:  \n  AWS Account:\n    description: "The AWS Account to use"\n    default: "Dev | 123456789"\n    allowed-values:\n      - "Dev | 123456789"\n      - "Test | 234567890"\n      - "Stage | 345678901"\n      - "Prod | 456789012"\n\ngrains:  \n  My AWS Grain:\n    kind: terraform\n    spec:\n      source:\n        store: my-repo\n        path: somefolder/somesubfolder\n      agent:\n        name: my-agent\n      inputs:\n      - aws_account_id: \'{{ .inputs.["AWS Account"] | split: "|" | last | strip }}\'\n      outputs:\n      - some_output\n')),(0,r.kt)("h3",{id:"benefits-and-usage-1"},"Benefits and Usage"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"With this structure, multiple AWS accounts are supported without requiring multiple EKS clusters or agents."),(0,r.kt)("li",{parentName:"ul"},"Changing the account is as simple as changing the blueprint input value."),(0,r.kt)("li",{parentName:"ul"},"If accounts are pre-set but need to be swappable, an account/space parameter can be used instead of a blueprint input (and this allows multiple spaces to share the same blueprint but target different accounts).")),(0,r.kt)("h3",{id:"architectural-diagram-1"},"Architectural Diagram"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"*Option B Diagram: Cross Accounts provisioning with a Single Torque Agent in the Master Account\n",(0,r.kt)("img",{alt:"Option B Architectural Diagram",src:n(219).Z,width:"2198",height:"984"}))),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"Both options provide flexibility in provisioning resources across multiple AWS accounts based on your specific requirements and setup. "),(0,r.kt)("p",null,"Option A is suitable when you have separate EKS clusters for each account, while Option B allows you to manage multiple accounts from a single Torque agent in the master account."))}m.isMDXComponent=!0},7465:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/cross-account-option-a-a19efb3496bdfa343f70dee84c9866ba.png"},219:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/cross-account-option-b-c2d0b4eec14cafc267e926a3d261b66b.png"}}]);