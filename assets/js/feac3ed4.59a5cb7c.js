"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[3208],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||o;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7595:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],u={sidebar_position:15,title:"The CloudFormation Grain"},l=void 0,s={unversionedId:"blueprint-designer-guide/blueprints/cloudformation-grain",id:"blueprint-designer-guide/blueprints/cloudformation-grain",title:"The CloudFormation Grain",description:"The CloudFormation grain is Torque's native support for AWS CloudFormation templates. Torque allows designers to use CloudFormation features to easily orchestrate self-developer and community CloudFormation modules in a standard way and share them with others as building blocks. For the full blueprint yaml example, see Example 2: Webgame on S3 (using CloudFormation and Terraform).",source:"@site/docs/blueprint-designer-guide/blueprints/cloudformation-grain.md",sourceDirName:"blueprint-designer-guide/blueprints",slug:"/blueprint-designer-guide/blueprints/cloudformation-grain",permalink:"/blueprint-designer-guide/blueprints/cloudformation-grain",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/blueprint-designer-guide/blueprints/cloudformation-grain.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,title:"The CloudFormation Grain"},sidebar:"torqueSidebar",previous:{title:"The Helm Grain",permalink:"/blueprint-designer-guide/blueprints/helm-grain"},next:{title:"The Kubernetes Grain\u200b",permalink:"/blueprint-designer-guide/blueprints/kubernetes-grain"}},d={},p=[{value:"source",id:"source",level:3},{value:"agent",id:"agent",level:3},{value:"authentication",id:"authentication",level:3},{value:"inputs\u200b",id:"inputs",level:3},{value:"tags\u200b",id:"tags",level:3},{value:"outputs\u200b",id:"outputs",level:3},{value:"Example",id:"example",level:3}],c={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The CloudFormation grain is Torque's native support for AWS CloudFormation templates. Torque allows designers to use CloudFormation features to easily orchestrate self-developer and community CloudFormation modules in a standard way and share them with others as building blocks. For the full blueprint yaml example, see ",(0,o.kt)("a",{parentName:"p",href:"/blueprint-designer-guide/blueprint-quickstart-guide#example-2-webgame-on-s3-using-cloudformation-and-terraform"},"Example 2: Webgame on S3 (using CloudFormation and Terraform)"),"."),(0,o.kt)("h3",{id:"source"},"source"),(0,o.kt)("p",null,"Please see ",(0,o.kt)("a",{parentName:"p",href:"/blueprint-designer-guide/blueprints/blueprints-yaml-structure#source"},"the grain source")," for more details."),(0,o.kt)("h3",{id:"agent"},"agent"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"agent")," is not required or supported by CloudFormation Grain. Instead, this grain uses direct authentication to the AWS cloud account, as explained below."),(0,o.kt)("h3",{id:"authentication"},"authentication"),(0,o.kt)("p",null,"To enable Torque to connect to the AWS account and deploy the CloudFormation template, you must supply the Role Arn and external ID in the CloudFormation grain's ",(0,o.kt)("inlineCode",{parentName:"p"},"authentication")," section. This is done by referencing a ",(0,o.kt)("a",{parentName:"p",href:"/admin-guide/general/credentials"},"credential")," that contains these authentication details. There are two ways to specify the credential, literally by name or using an input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"grains:\n  database:\n    kind: cloudformation\n    spec:\n      source:\n        path: github.com/org/repo.git//cloudformation/rds\n        ...\n      authentication:\n        - credential_name or {{.inputs.credentials_input_name}}\n")),(0,o.kt)("h3",{id:"inputs"},"inputs\u200b"),(0,o.kt)("p",null,"Similar to blueprint inputs, CloudFormation grain inputs allow you to reuse the same CloudFormation module in different ways. Inputs provided to the CloudFormation grain are used when launching the CloudFormation module."),(0,o.kt)("h3",{id:"tags"},"tags\u200b"),(0,o.kt)("p",null,"Whenever a CloudFormation grain is launched, all resources created during the deployment process are automatically tagged with Torque's system tags, built-in tags and custom tags."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),(0,o.kt)("strong",{parentName:"h5"},"tip"))),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The CloudFormmation template must have at least one tag."))),(0,o.kt)("h3",{id:"outputs"},"outputs\u200b"),(0,o.kt)("p",null,"Outputs are strings generated by CloudFormation during the deployment process."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"grains:\n  database:\n    kind: cloudformation\n    spec:\n      source:\n        path: github.com/org/repo.git//cloudformation/rds\n        ...\n      authentication:\n        ...\n      outputs:\n        - agent_name\n        - connection_string\n")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"grains:\n  CFN-S3-Bucket:\n    kind: cloudformation\n    spec: \n      source:\n        # store: autogen_repo_sandbox_4235f76y\n        path: https://.../AWSS3Bucket.yaml\n      region: '{{ .inputs.[\"AWS Region\"] }}'\n      authentication:\n        - aws-auth\n      inputs:\n        - AccessControl: '{{ .inputs.[\"Access Control\"] }}'\n        - BucketName: '{{ .inputs.[\"Bucket Name\"] }}-{{ sandboxid | downcase }}'\n      outputs:\n         - Arn\n         - DomainName\n")))}m.isMDXComponent=!0}}]);