"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([[3467],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>v});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=i,v=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(v,a(a({ref:n},c),{},{components:t})):r.createElement(v,a({ref:n},c))}));function v(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2157:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:1,title:"The Environment YAML"},a=void 0,s={unversionedId:"environment-as-code/environment-as-code-yaml",id:"environment-as-code/environment-as-code-yaml",title:"The Environment YAML",description:"If you know how to write Torque blueprints, you can write Environment as Code (EaC) YAML files.",source:"@site/docs/environment-as-code/environment-as-code-yaml.md",sourceDirName:"environment-as-code",slug:"/environment-as-code/environment-as-code-yaml",permalink:"/environment-as-code/environment-as-code-yaml",editUrl:"https://github.com/QualiTorque/torque-docs/tree/master/docs/environment-as-code/environment-as-code-yaml.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"The Environment YAML"},sidebar:"torqueSidebar",previous:{title:"Overview",permalink:"/environment-as-code/environment-as-code-overview"},next:{title:"Torque Workflows",permalink:"/workflows/workflows-overview"}},l={},p=[{value:"complete example",id:"complete-example",level:3},{value:"environment",id:"environment",level:3}],c={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"If you know how to write Torque blueprints, you can write Environment as Code (EaC) YAML files.\nThe structure of an EaC YAML file is similar to a blueprint, with the addition of an 'environment' section that defines the properties of the specific environment instance."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),(0,i.kt)("strong",{parentName:"h5"},"Note"))),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Environments are written in YAML files that reside in a ",(0,i.kt)("strong",{parentName:"p"},"/environments"),' folder within a source control repository onboarded to Torque (the folder name is case-sensitive and must be "environments"). Environments kept in the  ',(0,i.kt)("strong",{parentName:"p"},"/environments"),'  folder must be of type ".yaml" and not ".yml" to be used in Torque.'))),(0,i.kt)("p",null,"Environment YAML files must be placed under the 'environments' directory in the repository. Torque periodically scans this directory for environment YAML files and stores them internally."),(0,i.kt)("p",null,"For the Blueprint example above, the directory structure is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"environments/\n    production.yaml\n    staging.yaml\n    devbox.yaml\n")),(0,i.kt)("p",null,"When a new environment YAML file is detected or an existing one is modified, Torque performs validations on the file. If the file is valid, a snapshot is saved, which will be used to create or reconcile the environment. If the file is invalid, it will not affect the existing snapshot or the environment."),(0,i.kt)("p",null,"If a user modifies the environment YAML file, the changes will be applied to the corresponding environment."),(0,i.kt)("p",null,"Possible applicable changes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add/remove grains"),(0,i.kt)("li",{parentName:"ul"},"Change commit/tag"),(0,i.kt)("li",{parentName:"ul"},"Environment inputs"),(0,i.kt)("li",{parentName:"ul"},"Grain inputs")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),(0,i.kt)("strong",{parentName:"h5"},"info"))),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"All sources must contain a commit hash or tag."))),(0,i.kt)("h3",{id:"complete-example"},"complete example"),(0,i.kt)("p",null,"Here's an example of a Torque environment YAML file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"spec_version: 2\n\nenvironment:\n  environment_name: eac-env-name\n  owner_email: me@quali.com\n  state: active\n  env-labels:\n    - production\n    - ML\n    \ninputs:\n  agent:\n    type: agent\n    default: production-k8s\n\n  tf_input:\n    type: string\n    default: default_input\n    \noutputs:\n  tf_output: \n    value: '{{ .grains.tf1.outputs.output2 }}'\n    quick: true\n    \ngrains:\n  tf1:\n    kind: terraform\n    tf-version: 1.5.5\n    spec:\n      source:\n        store: iac-repo\n        path: terraform/complex-references1\n        tag: v1.0.1 \n      agent:\n        name: '{{ .inputs.agent }}'\n      inputs:\n        - test_input1: '{{ .inputs.tf_input }}'\n        - test_input2: \"input2\"\n      outputs:\n        - output2\n\n  tf2:\n    kind: terraform\n    tf-version: 1.5.5\n    spec:\n      source:\n        store: iac-repo\n        path: terraform/complex-references2\n        tag: v1.0.2\n      agent:\n        name: '{{ .inputs.agent }}'\n      inputs:\n        - test_input1: '{{.inputs.tf_input}}'\n        - test_input2: \"input2\"\n      outputs:\n        - output2\n      scripts: \n        pre-tf-init:\n          source:\n            store: scripts-repo\n            path : scripts/user_script.sh\n          arguments: \"value\"\n        pre-tf-destroy:\n          source:\n            store: scripts-repo\n            path : scripts/user_script.sh\n          arguments: \"value\"\n  \n  bp1:\n    kind: blueprint\n    spec:\n      source:\n        store: iac-repo\n        path: blueprints/building-block.yaml\n        tag: official-1.0.1\n      inputs:\n        - agent: '{{ .inputs.agent }}'\n")),(0,i.kt)("p",null,"In this example, the ",(0,i.kt)("inlineCode",{parentName:"p"},"environment")," section defines the environment name, description, owner email, and state. The ",(0,i.kt)("inlineCode",{parentName:"p"},"inputs")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"outputs")," sections define the environment-level inputs and outputs, respectively."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"grains")," section contains the list of grains that make up the environment, similar to a blueprint. Each grain specifies its kind (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"terraform"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"blueprint"),", etc.), version, and other configuration details specific to that grain type."),(0,i.kt)("p",null,"By following this structure, users can define and manage their environments as code, allowing for version control, collaboration, and automated deployments using Torque's Environment as Code (EaC) functionality."),(0,i.kt)("h3",{id:"environment"},"environment"),(0,i.kt)("p",null,"Torque environment section contains all of the specific data related to the environment instance."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"environment:\n  environment_name: eac-env\n  description: eac example\n  owner_email: me@quali.com\n  state: active # desired state: active/inactive\n  collaborators: \n    collaborators_emails:\n      - collaborator1@quali.com\n      - collaborator2@quali.com\n  spaces:\n    - spaceA\n    - spaceB\n  tags:\n    key1: value1\n    key2: value2\n")))}u.isMDXComponent=!0}}]);