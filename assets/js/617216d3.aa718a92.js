"use strict";(self.webpackChunktorque=self.webpackChunktorque||[]).push([["6862"],{7758:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>a,toc:()=>l,default:()=>h,metadata:()=>i,assets:()=>c,contentTitle:()=>o});var i=JSON.parse('{"id":"example-blueprints/Cross Account Provisioning","title":"Cross Account Provisioning (AWS)","description":"Torque supports multiple options for provisioning resources across multiple AWS accounts.","source":"@site/docs/example-blueprints/Cross Account Provisioning.md","sourceDirName":"example-blueprints","slug":"/example-blueprints/Cross Account Provisioning","permalink":"/example-blueprints/Cross Account Provisioning","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiTorque/torque-docs/tree/master/docs/example-blueprints/Cross Account Provisioning.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Cross Account Provisioning (AWS)"},"sidebar":"torqueSidebar","previous":{"title":"Kubernetes Compliance","permalink":"/example-blueprints/Kubernetes Compliance"},"next":{"title":"Blueprint Design","permalink":"/blueprint-designer-guide/blueprint-quickstart-guide"}}'),s=t(4848),r=t(4429);let a={sidebar_position:4,title:"Cross Account Provisioning (AWS)"},o="Cross Account Provisioning in AWS",c={},l=[{value:"Option A: Torque Agent in each account",id:"option-a-torque-agent-in-each-account",level:2},{value:"Requirements and Setup",id:"requirements-and-setup",level:3},{value:"Benefits and Usage",id:"benefits-and-usage",level:3},{value:"Architectural Diagram",id:"architectural-diagram",level:3},{value:"Option B: Single Torque Agent in the Master Account",id:"option-b-single-torque-agent-in-the-master-account",level:2},{value:"Requirements and Setup",id:"requirements-and-setup-1",level:3},{value:"Benefits and Usage",id:"benefits-and-usage-1",level:3},{value:"Architectural Diagram",id:"architectural-diagram-1",level:3},{value:"Summary",id:"summary",level:2}];function u(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"cross-account-provisioning-in-aws",children:"Cross Account Provisioning in AWS"})}),"\n",(0,s.jsx)(n.p,{children:"Torque supports multiple options for provisioning resources across multiple AWS accounts."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Here are two common approaches"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#option-a-torque-agent-in-each-account",children:"Option A: Torque Agent in each account"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#option-b-single-torque-agent-in-the-master-account",children:"Option B: Single Torque Agent in the Master Account"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"option-a-torque-agent-in-each-account",children:"Option A: Torque Agent in each account"}),"\n",(0,s.jsx)(n.h3,{id:"requirements-and-setup",children:"Requirements and Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Each Torque Agent is sitting in a different AWS account."}),"\n",(0,s.jsx)(n.li,{children:"Each Agent is deployed in a different EKS cluster."}),"\n",(0,s.jsx)(n.li,{children:"OIDC is enabled on the clusters, and they each have a valid default service account with an IAM role annotation."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"benefits-and-usage",children:"Benefits and Usage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Changing the agent on a grain (via an agent type Blueprint input with/without allowed values restriction) will change the AWS account that the grain contents will be deployed on."}),"\n",(0,s.jsx)(n.li,{children:"Agent name can also be an Account/Space parameter, which will allow switching target accounts on all blueprints/grains that reference it at once."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"architectural-diagram",children:"Architectural Diagram"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Option A Diagram: Cross Accounts provisioning with Torque Agent in each account"}),"\n",(0,s.jsx)(n.img,{alt:"Option A Architectural Diagram",src:t(2110).A+"",width:"1344",height:"956"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"option-b-single-torque-agent-in-the-master-account",children:"Option B: Single Torque Agent in the Master Account"}),"\n",(0,s.jsx)(n.h3,{id:"requirements-and-setup-1",children:"Requirements and Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Torque agent is configured with a valid default service account that authenticates into an IAM role via OIDC (known as Master account role)."}),"\n",(0,s.jsx)(n.li,{children:"Each target AWS account has an IAM role with an identical name, with a trust policy set up to allow the Master account role to assume it (known as Target account role)."}),"\n",(0,s.jsx)(n.li,{children:"These Target Account roles have the permissions necessary to perform the actions Terraform will describe on the respective account."}),"\n",(0,s.jsx)(n.li,{children:"By utilizing identical names, the only difference in the IAM role ARNs is the account number."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Role Trust Policy Example"})}),"\n",(0,s.jsx)(n.p,{children:"This trust policy is set on the Target account role and references the ARN of the Master account role."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{  \n  "Version": "2012-10-17",  \n  "Statement": [ {\n      "Effect": "Allow",\n      "Principal": {\n        "AWS": "arn:aws:iam::111111111111:role/My_AWS_ROLE"\n      },\n      "Action": "sts:AssumeRole"\n  } ]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Terraform HCL Example"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",children:'variable "aws_account_id" {}\n\nprovider "aws" {  \n  assume_role {\n    role_arn     = "arn:aws:iam::${var.aws_account_id}:role/ROLE_NAME"\n    session_name = "SESSION_NAME"\n    external_id  = "EXTERNAL_ID"  \n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Torque Blueprint Example"})}),"\n",(0,s.jsx)(n.p,{children:"The Blueprint provides the user with a list of accounts to choose from, with a friendly text name for each account which is split out before passing the account number to Terraform."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'inputs:  \n  AWS Account:\n    description: "The AWS Account to use"\n    default: "Dev | 123456789"\n    allowed-values:\n      - "Dev | 123456789"\n      - "Test | 234567890"\n      - "Stage | 345678901"\n      - "Prod | 456789012"\n\ngrains:  \n  My AWS Grain:\n    kind: terraform\n    spec:\n      source:\n        store: my-repo\n        path: somefolder/somesubfolder\n      agent:\n        name: my-agent\n      inputs:\n      - aws_account_id: \'{{ .inputs.["AWS Account"] | split: "|" | last | strip }}\'\n      outputs:\n      - some_output\n'})}),"\n",(0,s.jsx)(n.h3,{id:"benefits-and-usage-1",children:"Benefits and Usage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"With this structure, multiple AWS accounts are supported without requiring multiple EKS clusters or agents."}),"\n",(0,s.jsx)(n.li,{children:"Changing the account is as simple as changing the blueprint input value."}),"\n",(0,s.jsx)(n.li,{children:"If accounts are pre-set but need to be swappable, an account/space parameter can be used instead of a blueprint input (and this allows multiple spaces to share the same blueprint but target different accounts)."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"architectural-diagram-1",children:"Architectural Diagram"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["*Option B Diagram: Cross Accounts provisioning with a Single Torque Agent in the Master Account\n",(0,s.jsx)(n.img,{alt:"Option B Architectural Diagram",src:t(6594).A+"",width:"2198",height:"984"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.p,{children:"Both options provide flexibility in provisioning resources across multiple AWS accounts based on your specific requirements and setup."}),"\n",(0,s.jsx)(n.p,{children:"Option A is suitable when you have separate EKS clusters for each account, while Option B allows you to manage multiple accounts from a single Torque agent in the master account."})]})}function h(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},2110:function(e,n,t){t.d(n,{A:()=>i});let i=t.p+"assets/images/cross-account-option-a-a19efb3496bdfa343f70dee84c9866ba.png"},6594:function(e,n,t){t.d(n,{A:()=>i});let i=t.p+"assets/images/cross-account-option-b-c2d0b4eec14cafc267e926a3d261b66b.png"},4429:function(e,n,t){t.d(n,{R:()=>a,x:()=>o});var i=t(6540);let s={},r=i.createContext(s);function a(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);